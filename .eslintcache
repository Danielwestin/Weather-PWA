[{"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/index.js":"1","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/reportWebVitals.js":"2","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/App.js":"3","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/api.js":"4","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/helpers.js":"5","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/hooks.js":"6","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/custom.js":"7","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/components/Loading/Loading.js":"8","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/SVG/Search.js":"9","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/constants.js":"10","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/components/Header/Header.js":"11","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/components/Content/Content.js":"12"},{"size":500,"mtime":1610576599194,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610533314730,"results":"15","hashOfConfig":"14"},{"size":241,"mtime":1611657333901,"results":"16","hashOfConfig":"14"},{"size":2715,"mtime":1611690264233,"results":"17","hashOfConfig":"14"},{"size":878,"mtime":1611688007049,"results":"18","hashOfConfig":"14"},{"size":853,"mtime":1611230418673,"results":"19","hashOfConfig":"14"},{"size":514,"mtime":1611237236874,"results":"20","hashOfConfig":"14"},{"size":263,"mtime":1611674636087,"results":"21","hashOfConfig":"14"},{"size":574,"mtime":1610981361904,"results":"22","hashOfConfig":"14"},{"size":266,"mtime":1611687948578,"results":"23","hashOfConfig":"14"},{"size":5149,"mtime":1611666459466,"results":"24","hashOfConfig":"14"},{"size":2665,"mtime":1611674523980,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ugzg81",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/index.js",[],["53","54"],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/reportWebVitals.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/App.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/api.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/helpers.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/hooks.js",["55","56"],"import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function useDebouncedValue(value, delay = 500) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => clearTimeout(timeout);\n  }, [value]);\n  return debouncedValue;\n}\n\nexport function useDebounceFn(fn, delay = 500) {}\n\nexport function usePreviousValue(value) {\n  const [savedValue, setSavedValue] = useState(\"\");\n\n  useEffect(() => {\n    if (value !== savedValue) setSavedValue(value);\n  }, [value]);\n\n  return savedValue;\n}\n\nexport function useSearchParam(key) {\n  const { search } = useLocation();\n\n  const searchParams = new URLSearchParams(search);\n\n  const value = searchParams.get(key);\n  return value || \"\";\n}\n","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/custom.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/components/Loading/Loading.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/SVG/Search.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/libraries/constants.js",[],"/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/components/Header/Header.js",["57"],"import { useState, useEffect, useRef } from \"react\";\nimport { useDebouncedValue } from \"../../libraries/hooks\";\nimport { useQuery } from \"../../libraries/api\";\nimport { reduceDaysArray } from \"../../libraries/helpers\";\nimport { useHistory } from \"react-router-dom\";\nimport { NavLink } from \"../../libraries/custom\";\nimport Content from \"../Content/Content.js\";\nimport styles from \"./header.module.scss\";\n\nimport SearchIcon from \"../../SVG/Search\";\n\nimport smoothscroll from \"smoothscroll-polyfill\";\nimport Loading from \"../Loading/Loading\";\n\nfunction Header() {\n  const [searchedCity, setSearchedCity] = useState(\"\");\n  const focusRef = useRef();\n  const bringDownKeyboardRef = useRef();\n  const debouncedQuery = useDebouncedValue(searchedCity, 1000);\n  const { error, loading, data } = useQuery();\n  const history = useHistory();\n\n  useEffect(() => {\n    smoothscroll.polyfill();\n\n    if (!debouncedQuery) return;\n\n    history.replace({\n      path: \"/\",\n      search: \"?location=\" + debouncedQuery + \"&day=Idag\",\n    });\n\n    bringDownKeyboardRef.current.blur();\n\n    // if (!focusRef.current) return;\n    setTimeout(() => {\n      focusRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }, 100);\n  }, [debouncedQuery]);\n\n  return (\n    <header className={styles.header}>\n      <fieldset className={styles.fieldset}>\n        <legend className={styles.legend}>\n          <h1>Nordic Weather</h1>\n        </legend>\n\n        <div className={styles.inputLabelWrapper}>\n          <input\n            type=\"text\"\n            name=\"location\"\n            id=\"location\"\n            className={styles.searchInput}\n            value={searchedCity}\n            onChange={(e) => setSearchedCity(e.target.value)}\n            ref={bringDownKeyboardRef}\n            autoFocus\n            required\n          />\n          <label\n            className={styles.inputLabel}\n            htmlFor=\"location\"\n            aria-label=\"Search Icon\"\n          >\n            <span className={styles.inputLabelContentName}>Sök på plats</span>\n            <span className={styles.inputLabelSearchIcon}>\n              <SearchIcon />\n            </span>\n          </label>\n        </div>\n      </fieldset>\n\n      {error ? (\n        <h2 ref={focusRef}>{error}</h2>\n      ) : loading ? (\n        <div\n          ref={focusRef}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <h3>Loading...</h3>\n          <Loading />\n        </div>\n      ) : (\n        <>\n          <h1 ref={focusRef}>{data.place}</h1>\n          <h2>{data.county}</h2>\n          <h3>{data.country}</h3>\n\n          <div className={styles.days}>\n            {data.timeSeries &&\n              reduceDaysArray(data.timeSeries).map((day, i) => (\n                <NavLink\n                  to={{\n                    pathname: \"/\",\n                    search: \"?location=\" + debouncedQuery + \"&day=\" + day,\n                  }}\n                  key={i}\n                  className={styles.dayLink}\n                  activeClassName={styles.activeDayLink}\n                  inactiveClassName={styles.inActiveDayLink}\n                >\n                  {day}\n                </NavLink>\n              ))}\n          </div>\n        </>\n      )}\n\n      {data.timeSeries && !error && <Content weatherData={data} />}\n      {/* {data.timeSeries &&\n          data.timeSeries\n            // .filter((timeSerie) => getDay(timeSerie.time) === \"Imorgon\")\n            .map((timeSerie) => (\n              <li\n                key={timeSerie.time}\n                style={{ display: \"flex\", padding: \"0.5rem 1rem\" }}\n              >\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                  {getDay(timeSerie.time)}\n                  <img\n                    src={`/weatherIcons/${checkTime(\n                      timeSerie.time,\n                      timeSerie.icon.value\n                    )}.png`}\n                    alt=\"ikon för väder\"\n                  />\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flex: \"1\",\n                  }}\n                >\n                  <div> */}\n      {/* {new Date(timeSerie.time).toLocaleDateString()}{\" \"} */}\n      {/* {new Date(timeSerie.time).toLocaleTimeString([], {\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                    })}\n                  </div>\n                  <div>\n                    Temperature:{\" \"}\n                    <span\n                      className={\n                        timeSerie.temperature.value < 0 ? \"cold\" : \"hot\"\n                      }\n                    >\n                      {timeSerie.temperature.value}{\" \"}\n                    </span> */}\n      {/* °{timeSerie.temperature.unit} */}\n      {/* </div>\n                </div>\n              </li>\n            ))} */}\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/DanielWestin/Documents/FrontEnd-utevecklare/examens/weather-pwa/src/components/Content/Content.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":13,"column":6,"nodeType":"64","endLine":13,"endColumn":13,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":24,"column":6,"nodeType":"64","endLine":24,"endColumn":13,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":39,"column":6,"nodeType":"64","endLine":39,"endColumn":22,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'savedValue'. Either include it or remove the dependency array.",["73"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [delay, value]",{"range":"81","text":"82"},"Update the dependencies array to be: [savedValue, value]",{"range":"83","text":"84"},"Update the dependencies array to be: [debouncedQuery, history]",{"range":"85","text":"86"},[366,373],"[delay, value]",[627,634],"[savedValue, value]",[1207,1223],"[debouncedQuery, history]"]